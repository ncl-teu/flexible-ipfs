// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crypto.proto

package org.peergos.protocol.crypto.pb;

public final class Crypto {
  private Crypto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code org.peergos.protocol.crypto.pb.KeyType}
   */
  public enum KeyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RSA = 0;</code>
     */
    RSA(0),
    /**
     * <code>Ed25519 = 1;</code>
     */
    Ed25519(1),
    /**
     * <code>Secp256k1 = 2;</code>
     */
    Secp256k1(2),
    /**
     * <code>ECDSA = 3;</code>
     */
    ECDSA(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RSA = 0;</code>
     */
    public static final int RSA_VALUE = 0;
    /**
     * <code>Ed25519 = 1;</code>
     */
    public static final int Ed25519_VALUE = 1;
    /**
     * <code>Secp256k1 = 2;</code>
     */
    public static final int Secp256k1_VALUE = 2;
    /**
     * <code>ECDSA = 3;</code>
     */
    public static final int ECDSA_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static KeyType valueOf(int value) {
      return forNumber(value);
    }

    public static KeyType forNumber(int value) {
      switch (value) {
        case 0: return RSA;
        case 1: return Ed25519;
        case 2: return Secp256k1;
        case 3: return ECDSA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<KeyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        KeyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KeyType>() {
            public KeyType findValueByNumber(int number) {
              return KeyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.peergos.protocol.crypto.pb.Crypto.getDescriptor().getEnumTypes().get(0);
    }

    private static final KeyType[] VALUES = values();

    public static KeyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private KeyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.peergos.protocol.crypto.pb.KeyType)
  }

  public interface PublicKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.peergos.protocol.crypto.pb.PublicKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
     */
    org.peergos.protocol.crypto.pb.Crypto.KeyType getType();

    /**
     * <code>bytes Data = 2;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code org.peergos.protocol.crypto.pb.PublicKey}
   */
  public  static final class PublicKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.peergos.protocol.crypto.pb.PublicKey)
      PublicKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PublicKey.newBuilder() to construct.
    private PublicKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PublicKey() {
      type_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PublicKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_PublicKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_PublicKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.peergos.protocol.crypto.pb.Crypto.PublicKey.class, org.peergos.protocol.crypto.pb.Crypto.PublicKey.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
     */
    public org.peergos.protocol.crypto.pb.Crypto.KeyType getType() {
      @SuppressWarnings("deprecation")
      org.peergos.protocol.crypto.pb.Crypto.KeyType result = org.peergos.protocol.crypto.pb.Crypto.KeyType.valueOf(type_);
      return result == null ? org.peergos.protocol.crypto.pb.Crypto.KeyType.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes Data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.peergos.protocol.crypto.pb.Crypto.KeyType.RSA.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.peergos.protocol.crypto.pb.Crypto.KeyType.RSA.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.peergos.protocol.crypto.pb.Crypto.PublicKey)) {
        return super.equals(obj);
      }
      org.peergos.protocol.crypto.pb.Crypto.PublicKey other = (org.peergos.protocol.crypto.pb.Crypto.PublicKey) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && getData()
          .equals(other.getData());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.peergos.protocol.crypto.pb.Crypto.PublicKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.peergos.protocol.crypto.pb.PublicKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.peergos.protocol.crypto.pb.PublicKey)
        org.peergos.protocol.crypto.pb.Crypto.PublicKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_PublicKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_PublicKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.peergos.protocol.crypto.pb.Crypto.PublicKey.class, org.peergos.protocol.crypto.pb.Crypto.PublicKey.Builder.class);
      }

      // Construct using org.peergos.protocol.crypto.pb.Crypto.PublicKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_PublicKey_descriptor;
      }

      @java.lang.Override
      public org.peergos.protocol.crypto.pb.Crypto.PublicKey getDefaultInstanceForType() {
        return org.peergos.protocol.crypto.pb.Crypto.PublicKey.getDefaultInstance();
      }

      @java.lang.Override
      public org.peergos.protocol.crypto.pb.Crypto.PublicKey build() {
        org.peergos.protocol.crypto.pb.Crypto.PublicKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.peergos.protocol.crypto.pb.Crypto.PublicKey buildPartial() {
        org.peergos.protocol.crypto.pb.Crypto.PublicKey result = new org.peergos.protocol.crypto.pb.Crypto.PublicKey(this);
        result.type_ = type_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.peergos.protocol.crypto.pb.Crypto.PublicKey) {
          return mergeFrom((org.peergos.protocol.crypto.pb.Crypto.PublicKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.peergos.protocol.crypto.pb.Crypto.PublicKey other) {
        if (other == org.peergos.protocol.crypto.pb.Crypto.PublicKey.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.peergos.protocol.crypto.pb.Crypto.PublicKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.peergos.protocol.crypto.pb.Crypto.PublicKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
       */
      public org.peergos.protocol.crypto.pb.Crypto.KeyType getType() {
        @SuppressWarnings("deprecation")
        org.peergos.protocol.crypto.pb.Crypto.KeyType result = org.peergos.protocol.crypto.pb.Crypto.KeyType.valueOf(type_);
        return result == null ? org.peergos.protocol.crypto.pb.Crypto.KeyType.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
       */
      public Builder setType(org.peergos.protocol.crypto.pb.Crypto.KeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes Data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes Data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes Data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.peergos.protocol.crypto.pb.PublicKey)
    }

    // @@protoc_insertion_point(class_scope:org.peergos.protocol.crypto.pb.PublicKey)
    private static final org.peergos.protocol.crypto.pb.Crypto.PublicKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.peergos.protocol.crypto.pb.Crypto.PublicKey();
    }

    public static org.peergos.protocol.crypto.pb.Crypto.PublicKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PublicKey>
        PARSER = new com.google.protobuf.AbstractParser<PublicKey>() {
      @java.lang.Override
      public PublicKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PublicKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PublicKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PublicKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.peergos.protocol.crypto.pb.Crypto.PublicKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PrivateKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.peergos.protocol.crypto.pb.PrivateKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
     */
    int getTypeValue();
    /**
     * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
     */
    org.peergos.protocol.crypto.pb.Crypto.KeyType getType();

    /**
     * <code>bytes Data = 2;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code org.peergos.protocol.crypto.pb.PrivateKey}
   */
  public  static final class PrivateKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.peergos.protocol.crypto.pb.PrivateKey)
      PrivateKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PrivateKey.newBuilder() to construct.
    private PrivateKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PrivateKey() {
      type_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PrivateKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_PrivateKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_PrivateKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.peergos.protocol.crypto.pb.Crypto.PrivateKey.class, org.peergos.protocol.crypto.pb.Crypto.PrivateKey.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
     */
    public org.peergos.protocol.crypto.pb.Crypto.KeyType getType() {
      @SuppressWarnings("deprecation")
      org.peergos.protocol.crypto.pb.Crypto.KeyType result = org.peergos.protocol.crypto.pb.Crypto.KeyType.valueOf(type_);
      return result == null ? org.peergos.protocol.crypto.pb.Crypto.KeyType.UNRECOGNIZED : result;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes Data = 2;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.peergos.protocol.crypto.pb.Crypto.KeyType.RSA.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.peergos.protocol.crypto.pb.Crypto.KeyType.RSA.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.peergos.protocol.crypto.pb.Crypto.PrivateKey)) {
        return super.equals(obj);
      }
      org.peergos.protocol.crypto.pb.Crypto.PrivateKey other = (org.peergos.protocol.crypto.pb.Crypto.PrivateKey) obj;

      boolean result = true;
      result = result && type_ == other.type_;
      result = result && getData()
          .equals(other.getData());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.peergos.protocol.crypto.pb.Crypto.PrivateKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.peergos.protocol.crypto.pb.PrivateKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.peergos.protocol.crypto.pb.PrivateKey)
        org.peergos.protocol.crypto.pb.Crypto.PrivateKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_PrivateKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_PrivateKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.peergos.protocol.crypto.pb.Crypto.PrivateKey.class, org.peergos.protocol.crypto.pb.Crypto.PrivateKey.Builder.class);
      }

      // Construct using org.peergos.protocol.crypto.pb.Crypto.PrivateKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_PrivateKey_descriptor;
      }

      @java.lang.Override
      public org.peergos.protocol.crypto.pb.Crypto.PrivateKey getDefaultInstanceForType() {
        return org.peergos.protocol.crypto.pb.Crypto.PrivateKey.getDefaultInstance();
      }

      @java.lang.Override
      public org.peergos.protocol.crypto.pb.Crypto.PrivateKey build() {
        org.peergos.protocol.crypto.pb.Crypto.PrivateKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.peergos.protocol.crypto.pb.Crypto.PrivateKey buildPartial() {
        org.peergos.protocol.crypto.pb.Crypto.PrivateKey result = new org.peergos.protocol.crypto.pb.Crypto.PrivateKey(this);
        result.type_ = type_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.peergos.protocol.crypto.pb.Crypto.PrivateKey) {
          return mergeFrom((org.peergos.protocol.crypto.pb.Crypto.PrivateKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.peergos.protocol.crypto.pb.Crypto.PrivateKey other) {
        if (other == org.peergos.protocol.crypto.pb.Crypto.PrivateKey.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.peergos.protocol.crypto.pb.Crypto.PrivateKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.peergos.protocol.crypto.pb.Crypto.PrivateKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
       */
      public org.peergos.protocol.crypto.pb.Crypto.KeyType getType() {
        @SuppressWarnings("deprecation")
        org.peergos.protocol.crypto.pb.Crypto.KeyType result = org.peergos.protocol.crypto.pb.Crypto.KeyType.valueOf(type_);
        return result == null ? org.peergos.protocol.crypto.pb.Crypto.KeyType.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
       */
      public Builder setType(org.peergos.protocol.crypto.pb.Crypto.KeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.peergos.protocol.crypto.pb.KeyType Type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes Data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes Data = 2;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes Data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.peergos.protocol.crypto.pb.PrivateKey)
    }

    // @@protoc_insertion_point(class_scope:org.peergos.protocol.crypto.pb.PrivateKey)
    private static final org.peergos.protocol.crypto.pb.Crypto.PrivateKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.peergos.protocol.crypto.pb.Crypto.PrivateKey();
    }

    public static org.peergos.protocol.crypto.pb.Crypto.PrivateKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PrivateKey>
        PARSER = new com.google.protobuf.AbstractParser<PrivateKey>() {
      @java.lang.Override
      public PrivateKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PrivateKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PrivateKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PrivateKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.peergos.protocol.crypto.pb.Crypto.PrivateKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EnvelopeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.peergos.protocol.crypto.pb.Envelope)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * public_key is the public key of the keypair the enclosed payload was
     * signed with.
     * </pre>
     *
     * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
     */
    boolean hasPublicKey();
    /**
     * <pre>
     * public_key is the public key of the keypair the enclosed payload was
     * signed with.
     * </pre>
     *
     * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
     */
    org.peergos.protocol.crypto.pb.Crypto.PublicKey getPublicKey();
    /**
     * <pre>
     * public_key is the public key of the keypair the enclosed payload was
     * signed with.
     * </pre>
     *
     * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
     */
    org.peergos.protocol.crypto.pb.Crypto.PublicKeyOrBuilder getPublicKeyOrBuilder();

    /**
     * <pre>
     * payload_type encodes the type of payload, so that it can be deserialized
     * deterministically.
     * </pre>
     *
     * <code>bytes payload_type = 2;</code>
     */
    com.google.protobuf.ByteString getPayloadType();

    /**
     * <pre>
     * payload is the actual payload carried inside this envelope.
     * </pre>
     *
     * <code>bytes payload = 3;</code>
     */
    com.google.protobuf.ByteString getPayload();

    /**
     * <pre>
     * signature is the signature produced by the private key corresponding to
     * the enclosed public key, over the payload, prefixing a domain string for
     * additional security.
     * </pre>
     *
     * <code>bytes signature = 5;</code>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * <pre>
   * Envelope encloses a signed payload produced by a peer, along with the public
   * key of the keypair it was signed with so that it can be statelessly validated
   * by the receiver.
   * The payload is prefixed with a byte string that determines the type, so it
   * can be deserialized deterministically. Often, this byte string is a
   * multicodec.
   * </pre>
   *
   * Protobuf type {@code org.peergos.protocol.crypto.pb.Envelope}
   */
  public  static final class Envelope extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.peergos.protocol.crypto.pb.Envelope)
      EnvelopeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Envelope.newBuilder() to construct.
    private Envelope(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Envelope() {
      payloadType_ = com.google.protobuf.ByteString.EMPTY;
      payload_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Envelope(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.peergos.protocol.crypto.pb.Crypto.PublicKey.Builder subBuilder = null;
              if (publicKey_ != null) {
                subBuilder = publicKey_.toBuilder();
              }
              publicKey_ = input.readMessage(org.peergos.protocol.crypto.pb.Crypto.PublicKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(publicKey_);
                publicKey_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              payloadType_ = input.readBytes();
              break;
            }
            case 26: {

              payload_ = input.readBytes();
              break;
            }
            case 42: {

              signature_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_Envelope_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_Envelope_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.peergos.protocol.crypto.pb.Crypto.Envelope.class, org.peergos.protocol.crypto.pb.Crypto.Envelope.Builder.class);
    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 1;
    private org.peergos.protocol.crypto.pb.Crypto.PublicKey publicKey_;
    /**
     * <pre>
     * public_key is the public key of the keypair the enclosed payload was
     * signed with.
     * </pre>
     *
     * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
     */
    public boolean hasPublicKey() {
      return publicKey_ != null;
    }
    /**
     * <pre>
     * public_key is the public key of the keypair the enclosed payload was
     * signed with.
     * </pre>
     *
     * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
     */
    public org.peergos.protocol.crypto.pb.Crypto.PublicKey getPublicKey() {
      return publicKey_ == null ? org.peergos.protocol.crypto.pb.Crypto.PublicKey.getDefaultInstance() : publicKey_;
    }
    /**
     * <pre>
     * public_key is the public key of the keypair the enclosed payload was
     * signed with.
     * </pre>
     *
     * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
     */
    public org.peergos.protocol.crypto.pb.Crypto.PublicKeyOrBuilder getPublicKeyOrBuilder() {
      return getPublicKey();
    }

    public static final int PAYLOAD_TYPE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString payloadType_;
    /**
     * <pre>
     * payload_type encodes the type of payload, so that it can be deserialized
     * deterministically.
     * </pre>
     *
     * <code>bytes payload_type = 2;</code>
     */
    public com.google.protobuf.ByteString getPayloadType() {
      return payloadType_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString payload_;
    /**
     * <pre>
     * payload is the actual payload carried inside this envelope.
     * </pre>
     *
     * <code>bytes payload = 3;</code>
     */
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * signature is the signature produced by the private key corresponding to
     * the enclosed public key, over the payload, prefixing a domain string for
     * additional security.
     * </pre>
     *
     * <code>bytes signature = 5;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (publicKey_ != null) {
        output.writeMessage(1, getPublicKey());
      }
      if (!payloadType_.isEmpty()) {
        output.writeBytes(2, payloadType_);
      }
      if (!payload_.isEmpty()) {
        output.writeBytes(3, payload_);
      }
      if (!signature_.isEmpty()) {
        output.writeBytes(5, signature_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (publicKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPublicKey());
      }
      if (!payloadType_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, payloadType_);
      }
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, payload_);
      }
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, signature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.peergos.protocol.crypto.pb.Crypto.Envelope)) {
        return super.equals(obj);
      }
      org.peergos.protocol.crypto.pb.Crypto.Envelope other = (org.peergos.protocol.crypto.pb.Crypto.Envelope) obj;

      boolean result = true;
      result = result && (hasPublicKey() == other.hasPublicKey());
      if (hasPublicKey()) {
        result = result && getPublicKey()
            .equals(other.getPublicKey());
      }
      result = result && getPayloadType()
          .equals(other.getPayloadType());
      result = result && getPayload()
          .equals(other.getPayload());
      result = result && getSignature()
          .equals(other.getSignature());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      hash = (37 * hash) + PAYLOAD_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getPayloadType().hashCode();
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.peergos.protocol.crypto.pb.Crypto.Envelope parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.peergos.protocol.crypto.pb.Crypto.Envelope prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Envelope encloses a signed payload produced by a peer, along with the public
     * key of the keypair it was signed with so that it can be statelessly validated
     * by the receiver.
     * The payload is prefixed with a byte string that determines the type, so it
     * can be deserialized deterministically. Often, this byte string is a
     * multicodec.
     * </pre>
     *
     * Protobuf type {@code org.peergos.protocol.crypto.pb.Envelope}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.peergos.protocol.crypto.pb.Envelope)
        org.peergos.protocol.crypto.pb.Crypto.EnvelopeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_Envelope_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_Envelope_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.peergos.protocol.crypto.pb.Crypto.Envelope.class, org.peergos.protocol.crypto.pb.Crypto.Envelope.Builder.class);
      }

      // Construct using org.peergos.protocol.crypto.pb.Crypto.Envelope.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (publicKeyBuilder_ == null) {
          publicKey_ = null;
        } else {
          publicKey_ = null;
          publicKeyBuilder_ = null;
        }
        payloadType_ = com.google.protobuf.ByteString.EMPTY;

        payload_ = com.google.protobuf.ByteString.EMPTY;

        signature_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.peergos.protocol.crypto.pb.Crypto.internal_static_org_peergos_protocol_crypto_pb_Envelope_descriptor;
      }

      @java.lang.Override
      public org.peergos.protocol.crypto.pb.Crypto.Envelope getDefaultInstanceForType() {
        return org.peergos.protocol.crypto.pb.Crypto.Envelope.getDefaultInstance();
      }

      @java.lang.Override
      public org.peergos.protocol.crypto.pb.Crypto.Envelope build() {
        org.peergos.protocol.crypto.pb.Crypto.Envelope result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.peergos.protocol.crypto.pb.Crypto.Envelope buildPartial() {
        org.peergos.protocol.crypto.pb.Crypto.Envelope result = new org.peergos.protocol.crypto.pb.Crypto.Envelope(this);
        if (publicKeyBuilder_ == null) {
          result.publicKey_ = publicKey_;
        } else {
          result.publicKey_ = publicKeyBuilder_.build();
        }
        result.payloadType_ = payloadType_;
        result.payload_ = payload_;
        result.signature_ = signature_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.peergos.protocol.crypto.pb.Crypto.Envelope) {
          return mergeFrom((org.peergos.protocol.crypto.pb.Crypto.Envelope)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.peergos.protocol.crypto.pb.Crypto.Envelope other) {
        if (other == org.peergos.protocol.crypto.pb.Crypto.Envelope.getDefaultInstance()) return this;
        if (other.hasPublicKey()) {
          mergePublicKey(other.getPublicKey());
        }
        if (other.getPayloadType() != com.google.protobuf.ByteString.EMPTY) {
          setPayloadType(other.getPayloadType());
        }
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.peergos.protocol.crypto.pb.Crypto.Envelope parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.peergos.protocol.crypto.pb.Crypto.Envelope) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.peergos.protocol.crypto.pb.Crypto.PublicKey publicKey_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.peergos.protocol.crypto.pb.Crypto.PublicKey, org.peergos.protocol.crypto.pb.Crypto.PublicKey.Builder, org.peergos.protocol.crypto.pb.Crypto.PublicKeyOrBuilder> publicKeyBuilder_;
      /**
       * <pre>
       * public_key is the public key of the keypair the enclosed payload was
       * signed with.
       * </pre>
       *
       * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
       */
      public boolean hasPublicKey() {
        return publicKeyBuilder_ != null || publicKey_ != null;
      }
      /**
       * <pre>
       * public_key is the public key of the keypair the enclosed payload was
       * signed with.
       * </pre>
       *
       * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
       */
      public org.peergos.protocol.crypto.pb.Crypto.PublicKey getPublicKey() {
        if (publicKeyBuilder_ == null) {
          return publicKey_ == null ? org.peergos.protocol.crypto.pb.Crypto.PublicKey.getDefaultInstance() : publicKey_;
        } else {
          return publicKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * public_key is the public key of the keypair the enclosed payload was
       * signed with.
       * </pre>
       *
       * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
       */
      public Builder setPublicKey(org.peergos.protocol.crypto.pb.Crypto.PublicKey value) {
        if (publicKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          publicKey_ = value;
          onChanged();
        } else {
          publicKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * public_key is the public key of the keypair the enclosed payload was
       * signed with.
       * </pre>
       *
       * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
       */
      public Builder setPublicKey(
          org.peergos.protocol.crypto.pb.Crypto.PublicKey.Builder builderForValue) {
        if (publicKeyBuilder_ == null) {
          publicKey_ = builderForValue.build();
          onChanged();
        } else {
          publicKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * public_key is the public key of the keypair the enclosed payload was
       * signed with.
       * </pre>
       *
       * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
       */
      public Builder mergePublicKey(org.peergos.protocol.crypto.pb.Crypto.PublicKey value) {
        if (publicKeyBuilder_ == null) {
          if (publicKey_ != null) {
            publicKey_ =
              org.peergos.protocol.crypto.pb.Crypto.PublicKey.newBuilder(publicKey_).mergeFrom(value).buildPartial();
          } else {
            publicKey_ = value;
          }
          onChanged();
        } else {
          publicKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * public_key is the public key of the keypair the enclosed payload was
       * signed with.
       * </pre>
       *
       * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
       */
      public Builder clearPublicKey() {
        if (publicKeyBuilder_ == null) {
          publicKey_ = null;
          onChanged();
        } else {
          publicKey_ = null;
          publicKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * public_key is the public key of the keypair the enclosed payload was
       * signed with.
       * </pre>
       *
       * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
       */
      public org.peergos.protocol.crypto.pb.Crypto.PublicKey.Builder getPublicKeyBuilder() {
        
        onChanged();
        return getPublicKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * public_key is the public key of the keypair the enclosed payload was
       * signed with.
       * </pre>
       *
       * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
       */
      public org.peergos.protocol.crypto.pb.Crypto.PublicKeyOrBuilder getPublicKeyOrBuilder() {
        if (publicKeyBuilder_ != null) {
          return publicKeyBuilder_.getMessageOrBuilder();
        } else {
          return publicKey_ == null ?
              org.peergos.protocol.crypto.pb.Crypto.PublicKey.getDefaultInstance() : publicKey_;
        }
      }
      /**
       * <pre>
       * public_key is the public key of the keypair the enclosed payload was
       * signed with.
       * </pre>
       *
       * <code>.org.peergos.protocol.crypto.pb.PublicKey public_key = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.peergos.protocol.crypto.pb.Crypto.PublicKey, org.peergos.protocol.crypto.pb.Crypto.PublicKey.Builder, org.peergos.protocol.crypto.pb.Crypto.PublicKeyOrBuilder> 
          getPublicKeyFieldBuilder() {
        if (publicKeyBuilder_ == null) {
          publicKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.peergos.protocol.crypto.pb.Crypto.PublicKey, org.peergos.protocol.crypto.pb.Crypto.PublicKey.Builder, org.peergos.protocol.crypto.pb.Crypto.PublicKeyOrBuilder>(
                  getPublicKey(),
                  getParentForChildren(),
                  isClean());
          publicKey_ = null;
        }
        return publicKeyBuilder_;
      }

      private com.google.protobuf.ByteString payloadType_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * payload_type encodes the type of payload, so that it can be deserialized
       * deterministically.
       * </pre>
       *
       * <code>bytes payload_type = 2;</code>
       */
      public com.google.protobuf.ByteString getPayloadType() {
        return payloadType_;
      }
      /**
       * <pre>
       * payload_type encodes the type of payload, so that it can be deserialized
       * deterministically.
       * </pre>
       *
       * <code>bytes payload_type = 2;</code>
       */
      public Builder setPayloadType(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payloadType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * payload_type encodes the type of payload, so that it can be deserialized
       * deterministically.
       * </pre>
       *
       * <code>bytes payload_type = 2;</code>
       */
      public Builder clearPayloadType() {
        
        payloadType_ = getDefaultInstance().getPayloadType();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * payload is the actual payload carried inside this envelope.
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       */
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * payload is the actual payload carried inside this envelope.
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * payload is the actual payload carried inside this envelope.
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       */
      public Builder clearPayload() {
        
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * signature is the signature produced by the private key corresponding to
       * the enclosed public key, over the payload, prefixing a domain string for
       * additional security.
       * </pre>
       *
       * <code>bytes signature = 5;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       * signature is the signature produced by the private key corresponding to
       * the enclosed public key, over the payload, prefixing a domain string for
       * additional security.
       * </pre>
       *
       * <code>bytes signature = 5;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signature is the signature produced by the private key corresponding to
       * the enclosed public key, over the payload, prefixing a domain string for
       * additional security.
       * </pre>
       *
       * <code>bytes signature = 5;</code>
       */
      public Builder clearSignature() {
        
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.peergos.protocol.crypto.pb.Envelope)
    }

    // @@protoc_insertion_point(class_scope:org.peergos.protocol.crypto.pb.Envelope)
    private static final org.peergos.protocol.crypto.pb.Crypto.Envelope DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.peergos.protocol.crypto.pb.Crypto.Envelope();
    }

    public static org.peergos.protocol.crypto.pb.Crypto.Envelope getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Envelope>
        PARSER = new com.google.protobuf.AbstractParser<Envelope>() {
      @java.lang.Override
      public Envelope parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Envelope(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Envelope> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Envelope> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.peergos.protocol.crypto.pb.Crypto.Envelope getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_peergos_protocol_crypto_pb_PublicKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_peergos_protocol_crypto_pb_PublicKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_peergos_protocol_crypto_pb_PrivateKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_peergos_protocol_crypto_pb_PrivateKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_peergos_protocol_crypto_pb_Envelope_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_peergos_protocol_crypto_pb_Envelope_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014crypto.proto\022\036org.peergos.protocol.cry" +
      "pto.pb\"P\n\tPublicKey\0225\n\004Type\030\001 \001(\0162\'.org." +
      "peergos.protocol.crypto.pb.KeyType\022\014\n\004Da" +
      "ta\030\002 \001(\014\"Q\n\nPrivateKey\0225\n\004Type\030\001 \001(\0162\'.o" +
      "rg.peergos.protocol.crypto.pb.KeyType\022\014\n" +
      "\004Data\030\002 \001(\014\"\203\001\n\010Envelope\022=\n\npublic_key\030\001" +
      " \001(\0132).org.peergos.protocol.crypto.pb.Pu" +
      "blicKey\022\024\n\014payload_type\030\002 \001(\014\022\017\n\007payload" +
      "\030\003 \001(\014\022\021\n\tsignature\030\005 \001(\014*9\n\007KeyType\022\007\n\003" +
      "RSA\020\000\022\013\n\007Ed25519\020\001\022\r\n\tSecp256k1\020\002\022\t\n\005ECD" +
      "SA\020\003b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_peergos_protocol_crypto_pb_PublicKey_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_peergos_protocol_crypto_pb_PublicKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_peergos_protocol_crypto_pb_PublicKey_descriptor,
        new java.lang.String[] { "Type", "Data", });
    internal_static_org_peergos_protocol_crypto_pb_PrivateKey_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_peergos_protocol_crypto_pb_PrivateKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_peergos_protocol_crypto_pb_PrivateKey_descriptor,
        new java.lang.String[] { "Type", "Data", });
    internal_static_org_peergos_protocol_crypto_pb_Envelope_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_peergos_protocol_crypto_pb_Envelope_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_peergos_protocol_crypto_pb_Envelope_descriptor,
        new java.lang.String[] { "PublicKey", "PayloadType", "Payload", "Signature", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}

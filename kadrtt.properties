# if true, this means the private mode;
ipfs.isprivate=true

# swarmkey (未使用）
#ipfs.swarmkey=

## Merkle DAG保存フォルダ
ipfs.providerspath=providers

## データ保存フォルダ
ipfs.datapath=getdata

## chunk size with KB
ipfs.chunk.size=512

## Number of threads for asynchronous chunk puts
ipfs.chunkputthreads=20

## Number of threads for asynchronous chunk gets
ipfs.chunkgetthreads=20


## replicationあり:1 なし:0
ipfs.replication=1

## コンテンツにおいて，単位時間あたりのクエリ失敗確率のしきい値
ipfs.replication.threshold=0.5

## コンテンツ複製のために計測する時間間隔(秒)
ipfs.replication.measure.duration=1000


## URL of GW ENDPOINT [ /ip4/IP_Address/4001/ipfs/PeerID ]
#ipfs.endpoint=/ip4/54.64.247.203/tcp/4001/ipfs/12D3KooWRwtcPecyqCLkzwwP3xSVo8XtuVDSQMkoi7NJc2sjRTjR
ipfs.endpoint=/ip4/172.16.0.1/tcp/4001/ipfs/12D3KooWAQpmWHNRBjHKRTGYRQ3bAEuAWrVZQR8WZ2bm6ETj1RrW

ipfs.cp=.;lib/ipfs-ncl.jar;lib/ipfslib.jar;lib/jackson-core-2.15.2.jar;lib/jackson-databind-2.15.2.jar;lib/commons-math-2.0.jar

## Kademlia mode: 0: Kademlia / 1: KadRTT / 2: KadRTT2
kademlia.mode=0

# Num. of k-bucket entry if mode is 0 or 1.
kademlia.k=20

# Num. of concurrent queries
kademlia.alpha=20

# Num. of returned next candidates
kademlia.beta=20

kademlia.putredundancy=10

##### Simulation用の設定 #######
## 保留時間（次のイベント発生までの確率）
ipfs.lambda.min=0.1
ipfs.lambda.max=0.5

# 離脱あり:1 離脱なし: 0
ipfs.leave=1

## 離脱確率
ipfs.lambda.leave.min=0.0001
ipfs.lambda.leave.max=0.0004

# PUT開始時刻(s)
ipfs.put.starttime_min=30
ipfs.put.starttime_max=60

# PUTを行う間隔(s)
ipfs.put.interval_min=5
ipfs_put.interval_max=20

#PUTをするコンテンツ数
ipfs.put.contentnum_min=2
ipfs.put.contentnum_max=10











